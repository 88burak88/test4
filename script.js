// Okul listesi ve mesafe matrisi (10x10 array olmalı)
const ortaokulListesi = [
	'27 Aralık Lions Ortaokulu_39.871562, 32.831063',
	'Abdurrahman Şengel Ortaokulu_39.876312, 32.839813',
	'Ahmet Bahadır İlhan Ortaokulu_39.894437, 32.794313',
	'Ahmet Yesevi Ortaokulu_39.870188, 32.823687',
	'Akşemsettin Ortaokulu_39.866438, 32.838938',
	'Anıttepe Ortaokulu_39.932313, 32.830562',
	'Ayten Şaban Diri Ortaokulu_39.890884, 32.720326',
	'Ayten Tekışık Ortaokulu_39.899938, 32.819437',
	'Aziz Altıpınar Ortaokulu_39.833306, 32.946577',
	'Beştepe Şehitleri İmam Hatip Ortaokulu_39.898562, 32.802813',
	'Beytepe Ortaokulu_39.864187, 32.736562',
	'Büyükhanlı Kardeşler Ortaokulu_39.892437, 32.877562',
	'Dikmen Öğretmen Necla Kızılbağ Ortaokulu_39.878937, 32.840187',
	'Erdoğan Şahinoğlu Ortaokulu_39.870198, 32.855363',
	'Ertuğrulgazi Ortaokulu_39.928562, 32.881937',
	'Eşref Bitlis Ortaokulu_39.882438, 32.875187',
	'Gaziosmanpaşa Necla İlhan İpekçi Ortaokulu_39.900937, 32.870312',
	'Gülen Muharrem Pakoğlu Ortaokulu_39.927188, 32.818188',
	'Halide Edip Adıvar Ortaokulu_39.885688, 32.852812',
	'Hilmi Hatice Aksoy Ortaokulu_39.878937, 32.664563',
	'İl Genel Meclisi Ortaokulu_39.886938, 32.838062',
	'İmkb Alpaslan İmam Hatip Ortaokulu_39.926187, 32.831563',
	'İncesu Şehit Sultan Selim Karakoç İmam Hatip Ortaokulu_39.918688, 32.871437',
	'İzciler Ortaokulu_39.865813, 32.827188',
	'İzzet Latif Aras Ortaokulu_39.891250, 32.826250',
	'Kavaklıdere Ortaokulu_39.905563, 32.864812',
	'Kütükçü Alibey Ortaokulu_39.907562, 32.874938',
	'Maltepe Ortaokulu_39.929437, 32.841687',
	'Mazhar Usta Ortaokulu_39.891071, 32.885871',
	'Mehmet Özcan Torunoğlu Ortaokulu_39.850938, 32.842438',
	'Metin Oktay Ortaokulu_39.911187, 32.878438',
	'Milli Eğitim Vakfı Gökkuşağı Özel Eğitim Ortaokulu_39.889849, 32.691397',
	'Mimar Kemal Ortaokulu_39.919562, 32.857813',
	'Mimar Sinan Ortaokulu_39.914938, 32.875812',
	'Muzaffer Bahri Kutluözen Ortaokulu_39.854062, 32.631438',
	'Münevver Öztürk Ortaokulu_39.886437, 32.681188',
	'Necdet Seçkinöz Ortaokulu_39.880187, 32.686563',
	'Oran Perihan İnan Ortaokulu_39.848687, 32.820813',
	'Pakize Erdoğu Ortaokulu_39.893313, 32.828937',
	'Rauf Orbay Ortaokulu_39.847313, 32.849688',
	'Salih Alptekin Ortaokulu_39.899062, 32.847313',
	'Şehit Cihan Bayık Ortaokulu_39.882438, 32.800687',
	'Şehit Feyza Acısu İmam Hatip Ortaokulu_39.887313, 32.815562',
	'T Emlak Bankası Ortaokulu_39.883688, 32.752938',
	'Talatpaşa Ortaokulu_39.875937, 32.817937',
	'Tevfik İleri Ortaokulu_39.926812, 32.867438',
	'Timur Ortaokulu_39.907187, 32.881187',
	'Tsk Mehmetçik Vakfı Hafize İhsan Payaza Ortaokulu_39.841541, 32.725889',
	'Türkkonut Ortaokulu_39.834187, 32.660812',
	'Ülkü Akın Ortaokulu_39.897688, 32.799688',
	'Yasemin Karakaya Ortaokulu_39.911437, 32.770812',
	'Yunus Emre Ortaokulu_39.830014, 32.704270',
	'Ziraat Mühendisleri Ortaokulu_39.870188, 32.869813',


];

const liseListesi = [
    "50.Yıl Şehit Uhud Kadir Işık Anadolu Lisesi",
    "75.Yıl Anadolu Lisesi",
    "Adalet Nizamoğlu Anadolu Lisesi",
    "Anıttepe Anadolu Lisesi",
    "Ankara Atatürk Lisesi",
    "Ankara Çankaya Aziz Altınpınar Ticaret Meslek Anadolu Lisesi",
    "Ankara Fen Lisesi",
    "Ankara Güzel Sanatlar Lisesi",
    "Ankara Türk Telekom Sosyal Bilimler Lisesi",
    "Ayhan Sümer Anadolu Lisesi"
];

const distanceMatrix_Lise = [
    [0, 5.2, 7.8, 3.5, 12.1, 8.7, 15.3, 9.2, 6.8, 4.5],
    [5.2, 0, 6.3, 7.1, 8.9, 12.4, 18.2, 14.1, 11.7, 3.2],
	[0, 5.2, 7.8, 3.5, 12.1, 8.7, 15.3, 9.2, 6.8, 4.5],
    [5.2, 0, 6.3, 7.1, 8.9, 12.4, 18.2, 14.1, 11.7, 3.2],
	[0, 5.2, 7.8, 3.5, 12.1, 8.7, 15.3, 9.2, 6.8, 4.5],
    [5.2, 0, 6.3, 7.1, 8.9, 12.4, 18.2, 14.1, 11.7, 3.2],
	[0, 5.2, 7.8, 3.5, 12.1, 8.7, 15.3, 9.2, 6.8, 4.5],
    [5.2, 0, 6.3, 7.1, 8.9, 12.4, 18.2, 14.1, 11.7, 3.2],
	[0, 5.2, 7.8, 3.5, 12.1, 8.7, 15.3, 9.2, 6.8, 4.5],
    [5.2, 0, 6.3, 7.1, 8.9, 12.4, 18.2, 14.1, 11.7, 3.2]
];

const distanceMatrix_Ortaokul = [
		[0,2.7,7.7,1.3,2.2,9.2,17,5,22.3,7,22.4,9.9,2.4,4.7,14.7,9.3,10,8.3,6.7,21.6,2.8,9,11.9,2.4,4.3,9.4,12.1,10.1,12,5.1,12.9,19.4,9.5,13.3,26,21.4,21.1,4.5,3.4,7.2,6.9,7,3.7,17.3,2.4,11.7,12,16.5,23,7.2,11.1,17.3,8.2],
		[2.9,0,9.8,4.1,3.4,11.2,19.1,6.5,21.9,9.1,24.5,9.4,1.6,4.2,15.1,8.8,9.6,10.3,6.2,23.6,3.5,10.5,12.3,5.1,6.2,9.9,12.4,10.7,11.5,6.8,12.5,21.5,9.9,13.6,28.6,23.4,23.2,6.9,5.3,8.8,7.3,9.1,5.9,19.4,5.1,12.1,11.6,19.2,25.8,9.3,13.2,20,7.7],
		[7.7,10,0,7.7,9.5,9.9,14.2,5.9,27.3,4.2,19.6,13.6,9.1,11.4,16.8,14.2,13.2,9,9.9,18.7,7.9,9.8,15.1,9.2,7.1,12.7,15.3,10.9,16.4,12.4,16.1,16.6,12.7,16.5,23.7,18.5,18.3,10.8,6.8,14.5,10.1,5.8,5.3,14.5,6.1,13.9,15.3,19.8,25,3.5,7.8,20.6,13.8],
		[1.3,3.9,7.8,0,3.3,9.3,17.1,5.1,23.5,7.1,22.5,11,3.5,5.8,15.7,10.4,11.1,8.3,7.8,21.6,3.9,9.1,13,2.4,4.5,10.5,13.2,10.2,13.1,6.3,14,19.5,10.6,14.4,26.1,21.4,21.2,5.6,4.2,8.3,8,7.1,3.8,17.4,2.4,12.8,13.2,16.5,23.1,7.3,11.2,17.3,9.3],
		[2.2,3.4,9.5,3.3,0,11,18.8,6.8,21.1,8.8,23.8,8.6,3.5,3.5,15.9,8,9.4,10.1,6.3,23.3,4.3,10.8,13.2,4.4,6,10.7,12.2,11.6,10.8,3.7,12.2,21.2,10.8,13.4,27,23.1,22.9,4.3,5.2,5.8,8.2,8.8,5.5,19.1,4.3,13,11.4,17.5,24.1,9,12.9,18.3,7],
		[10.6,11.9,9.9,10.6,12.3,0,15.6,7.7,22.5,7.9,21,10.1,11,12,7.9,11.7,8.6,3.8,9.3,20.1,9.3,3.6,6.4,12.1,9.7,8.2,9.8,2.4,11.6,15.1,7.8,17.9,4.8,8.8,25.1,19.9,19.7,13.7,9.2,16.6,9.5,10.2,8.1,15.9,9,5,9.1,22.6,26.3,8.1,9.9,23.4,12.3],
		[17,19.3,14.9,17.1,18.8,14.2,0,15.7,36,14.2,10.2,22.8,18.4,20.7,21.4,24.1,21.3,13.2,19.7,6.9,17.4,15,19.9,18.6,16.9,20.7,22.5,16,24.7,21.8,21.3,4.7,18.4,22.3,12.4,6.1,5.1,20.2,16.6,23.8,20,15.5,14.6,7.4,15.4,18.5,22.6,12,11.3,14.3,8.5,10.4,23.6],
		[4.8,6.5,5.5,4.9,6.6,5.6,13.4,0,23,4,18.8,9.3,5.6,7.9,11.8,9.9,8.9,4.7,5.6,18,3.5,4.7,10.3,6.4,2.7,8.3,11,5.8,12.1,9.6,11.7,15.8,7.9,11.8,22.9,17.8,17.5,8.9,2.4,11.7,5.8,6,2.6,13.7,3.4,8.9,10.9,18.4,24.2,4.2,7.7,19.1,9.4],
		[22.2,21.7,28.7,23.4,21.1,23.6,35.9,24.7,0,27.5,37,16.3,21.1,18.3,17.1,15.4,18.6,24.6,18.9,33.2,22.4,24.4,18.7,24.4,25.1,20,19.5,23.4,15.3,20.1,16.8,36.1,21.2,20.4,33.9,36.6,35.9,22.7,23.9,20.4,22.3,28,24.8,36.3,24.4,18.3,17.2,30.7,37.3,27.6,30.2,31.3,17.1],
		[6.5,8.8,3.9,6.6,8.3,8.1,12.7,4.2,25.6,0,18.1,11.9,7.9,10.2,14.9,12.5,11.5,7.2,8.2,17.2,6.2,7.8,13.3,8,5.4,10.9,13.6,9,14.7,11.3,14.4,15.1,11,14.8,22.2,17,16.8,9.6,5.1,13.3,8.4,5.5,4.1,13,4.9,11.9,13.6,18.6,23.4,1.2,6.7,19.3,12],
		[20.6,22.9,18.5,20.7,22.4,19.9,10,19.4,37.8,17.9,0,26.4,22,24.3,27,27.7,24.9,19,23.4,13.6,21,20,25.4,22.2,20.6,24.3,26.1,21.1,28.4,23.2,26.8,12.2,23.1,26.9,18,13.6,11.8,22.1,20.3,24.3,23.6,19.1,18.2,7.5,19,24.1,26.7,12.4,16.2,18,12.7,10.8,26.7],
		[8.9,8.4,14.3,10,7.7,10.5,20.6,10.1,15.6,12.8,26,0,7.8,5,8.3,3.3,2.9,12,5.6,25.1,9,10.3,5.6,11.1,10.4,4.2,4.6,10.2,3.8,8,3.6,22.9,7.6,6.2,30.1,24.9,24.7,10.6,9.2,9.4,8.7,14.6,11.3,20.9,11.1,6.6,2.7,23.1,29.7,13,14.9,23.9,5.1],
		[2.4,1.6,8.8,3.5,3.4,10.2,18.2,5.6,21.3,8.2,23.6,8.8,0,3.6,14.1,8.2,9,9.4,5.6,22.7,2.5,9.5,11.4,4.6,5.2,8.9,11.6,9.8,10.9,6.6,11.8,20.6,9,12.8,27.7,22.5,22.3,6.4,4.4,8.9,6.4,8.2,5,18.5,4.6,11.2,10.9,18.7,25.2,8.4,12.3,19.5,7.1],
		[4.5,4.1,11,5.7,3.4,12.4,20.3,7.7,17.8,10.3,25.7,5.7,3.4,0,13.9,5.1,6.6,11.6,4.2,24.9,4.7,11.7,11.1,6.7,7.4,7.9,9.4,12,7.4,4.3,9.3,22.7,9.9,10.6,29.8,24.7,24.4,6.9,6.6,6.2,7.4,10.3,7.1,20.6,6.7,11,8.4,19.4,26,10.5,14.4,20.2,3.5],
		[13.5,13.9,16.1,14.5,14.8,9,21.1,12,17.8,14.1,26.5,7.7,13,12.8,0,9.7,8.5,10,10.8,25.6,11.3,9.8,4.6,15.7,12.4,8.1,7.8,8.5,8,15.7,4.7,23.5,6.3,7.5,30.6,25.4,25.2,17.5,11.2,16.4,11.5,16.4,13.3,21.4,13.7,3.5,5.5,28.6,31.9,14.3,15.4,29.4,12.7],
		[8.3,7.8,14.8,9.4,7.1,12.3,22.4,10.8,14.5,13.5,27.8,3.3,7.2,4.4,10.3,0,4.7,13.8,5,26.9,8.4,12.1,7.5,10.5,11.2,6,6.5,12,3.6,7.4,5.5,24.7,9.4,8.2,31.9,26.7,26.5,10,10,7.8,8.4,14.1,10.9,22.7,10.5,8.6,4.7,22.5,29.1,13.7,16.7,23.3,3.7],
		[10.4,9.9,13.7,11.5,9.2,8.4,18.5,9.5,17.8,12.2,23.9,3.4,9.3,6.5,8.2,5.3,0,9.9,6.8,23,8.7,8.3,5.4,12.6,9.8,2.2,3.6,8.1,5.4,9.5,4.6,20.9,5.5,4.8,28,22.8,22.6,12.1,8.6,10.9,8,14,10.7,18.8,11.1,5.2,3.7,24.6,29.3,12.4,12.8,25.4,6.6],
		[10.2,12.1,9.5,10.3,12,3.8,14.4,5.8,25.8,7.5,19.7,12.1,11.1,13.2,11.2,13.6,10.6,0,10.5,18.9,9.1,3.1,9.6,11.8,8.3,10,11.8,5.7,14.1,15,11,16.7,8.1,12,23.9,18.7,18.5,13.3,8,17,10.1,9.9,7.6,14.7,8.6,8.2,12.3,22.3,25.1,7.7,8.7,23.1,14.3],
		[6.6,6.2,10.7,7.7,6.3,10.2,19,6.4,18,9.1,24.4,4.3,5.5,4.1,11.3,4.9,4,10.3,0,23.6,5.7,10,8.5,8.8,6.8,5.3,6.8,9.8,7.1,7.3,6.8,21.4,7.3,8,28.5,23.4,23.1,9.9,5.5,8.7,4,10.9,7.6,19.3,8.1,8.4,6,22.4,29,9.3,13.3,23.2,4.4],
		[21.9,24.2,19.8,22,23.7,18.8,6.4,20.4,34.5,18.9,13.6,27.5,23.3,25.6,26.1,28.6,26,17.9,24.4,0,22.3,19.7,24.5,23.4,21.6,25.5,27.2,20.7,29.5,23.6,25.9,3.8,23.1,26.9,7.8,4.4,3.5,22.5,21.3,24.7,24.6,20.4,19.5,13.3,20.3,23.2,27.2,12.8,9.8,19,13.1,10,27.1],
		[2.8,3.5,7.7,3.9,4.3,8.3,16.1,3.5,22.1,6.2,21.5,8.3,2.5,4.9,12.6,9,8,7.4,4.6,20.6,0,7.5,9.8,5,3.8,7.4,10.1,8.3,11.1,7.4,10.9,18.5,7.5,11.3,25.6,20.4,20.2,6.7,2.6,9.5,4.9,7.1,4,16.4,4.3,9.7,10,19.1,25.6,6.4,10.4,19.8,8.4],
		[9.4,9.9,9.6,9.7,10.7,2.8,14.4,5.2,23.6,8,19.7,9.4,8.9,10.6,9,11,8,3.9,7.9,18.9,7.3,0,7.5,11.2,7.5,7.4,9.2,3,11.4,14.1,8.8,16.7,5.6,9.8,23.9,18.7,18.5,13.4,7.1,15.9,7.4,10.4,7.3,14.7,8.2,6.1,9.8,22.8,25.1,8.2,8.7,23.6,11.6],
		[11,11.4,13.8,12,12.3,6.9,18.6,9.6,18,12,24,5.8,10.5,10.2,5,7.7,5.6,7.9,8.3,23.1,8.8,7.7,0,13.2,9.9,5.2,5.3,6.7,6,13.1,2.2,21,3.9,3.1,28.1,22.9,22.7,15,8.7,14.4,9,14.1,10.8,18.9,11.2,2,3.5,26.2,29.4,12.2,12.9,26.9,10.3],
		[2.4,4.9,9.3,2.4,4.4,10.8,18.6,6.6,24.5,8.6,23.8,12.1,4.6,6.9,16.9,11.5,12.2,9.9,8.9,23.1,5,10.6,14.1,0,6,11.7,14.3,11.7,14.2,6.9,15.1,21,11.8,15.6,27.1,22.9,22.7,6,5.5,9,9.1,8.6,5.3,18.9,3.5,13.9,14.3,17.6,24.2,8.8,12.7,18.4,10.4],
		[4.3,6.3,7.3,4.5,6,8.3,16.1,3.4,22.8,6.2,21.5,9.1,5.4,7.7,13.4,9.8,8.7,7.3,5.4,20.6,3.4,7.4,10.6,6,0,8.2,10.9,8.5,11.9,9,11.7,18.4,8.3,12.1,25.6,20.4,20.2,8.4,1.8,11.1,5.7,6.6,3.4,16.4,3.8,10.4,10.8,18.7,25.2,6.3,10.4,19.4,9.3],
		[10.4,10.8,13.2,11.4,11.5,7.9,18,9,20.1,11.7,23.4,5.7,9.9,8.8,9.8,7.5,4.2,9.4,6.3,22.5,8.2,7.8,7.1,12.6,9.3,0,5.5,7.6,7.7,11.7,6.9,20.4,5,6.7,27.5,22.3,22.1,14.3,8.1,13.2,7.5,13.4,10.2,18.3,10.6,6.9,6,25.5,28.8,11.9,12.3,26.3,8.9],
		[12.9,12.5,15.7,13.9,11.8,9.5,20.5,11.5,18.5,14.2,25.9,4.6,11.9,9.1,7.6,6.5,4.6,10.6,8.8,25.1,10.8,10.3,4.8,15.1,11.8,4.2,0,9.4,6.4,12.1,3.1,22.9,6.5,4.2,30,24.9,24.6,14.7,10.6,13.2,10,16,12.7,20.8,13.2,4.6,2.8,27.2,31.3,14.4,14.8,28,9.2],
		[10.2,10.6,10.4,10.9,11.5,3.3,15.6,6.5,23.1,8.4,21,9.8,9.7,11.4,8.5,11.4,8.3,4.3,8.7,20.1,8,3.7,6.9,12.4,8.7,7.9,9.5,0,11.8,14.8,8.3,18,4.7,9.3,25.1,19.9,19.7,14.2,7.9,16.3,8.2,10.7,8.6,15.9,9.4,5.5,9.6,23.2,26.4,8.6,9.9,23.9,12],
		[10.9,10.4,16.9,12.1,9.8,12.5,23.2,12.7,14.6,15.4,28.5,3.7,9.8,7.1,8.6,3.6,5.5,13.5,7.6,27.7,11.1,12.9,5.8,13.1,13,6.8,6.2,12.3,0,8.8,3.8,25.5,9.5,7.4,32.6,27.5,27.3,11.5,11.8,9.1,11,16.7,13.5,23.5,13.1,7.6,4.1,24,30.6,15.6,17.4,24.8,5.8],
		[5.1,6.8,12.5,6.3,3.7,14,21.8,9.8,19.7,11.8,23.2,8.9,6.8,5.6,17.2,8,9.9,13,8.4,24.3,7.4,13.8,14.5,6.9,9,11.2,12.7,14.9,9.4,0,12.5,22.9,14,13.9,27.4,24.3,22.6,4.4,8.2,4.1,11.6,11.8,8.5,22.1,7.3,14.3,11.7,17,23.5,12,15.9,17.8,6.5],
		[12.5,12,15.6,13.6,11.3,8.6,20.4,11.3,15.8,13.7,25.8,3.6,11.4,8.6,5.3,5.5,5.4,9.7,9.1,24.9,10.6,9.5,2,14.7,11.7,5.7,3.1,8.5,3.8,11.6,0,22.8,5.7,3.6,29.9,24.7,24.5,14.2,10.5,12.2,10.8,15.8,12.6,20.7,13,3.8,1.3,26.7,31.2,14,14.7,27.5,8.5],
		[19,21.3,16.9,19,20.8,16.5,5,17.8,36.3,16.3,13.2,24.7,20.4,22.7,23.7,26.1,23.2,15.5,21.8,4,19.4,17.3,22.2,20.5,18.9,22.7,24.5,18.3,26.7,23.2,23.6,0,20.7,24.6,9.8,3,2.8,22.1,18.6,24.4,22,17.5,16.6,11.9,17.4,20.8,24.9,12.4,9.7,16.4,10.8,9.9,25.6],
		[11.8,12.2,13.7,12.8,12.1,7.6,18.5,9.8,20.5,12.1,23.9,6.2,11.3,9.4,7.1,8.1,4.9,8.6,7.8,23,9.6,7.5,4.4,14,10.7,4.5,5.9,6.1,8.2,12.4,5.8,20.9,0,6.4,28,22.8,22.6,15,9.5,13.8,9,14.5,11.5,18.8,12,4.2,6.5,26.9,29.2,12.3,12.8,27.7,9.5],
		[13.6,14,16.4,14.6,13.6,9.5,21.2,12.2,19.4,14.6,26.6,7.2,13.1,10.9,7.6,9.1,6.3,10.5,9.7,25.7,11.4,10.3,3.3,15.8,12.5,6,4.3,9.3,7.4,13.8,3.6,23.6,6.5,0,30.7,25.5,25.3,16.4,11.3,15.3,10.9,16.7,13.4,21.5,13.8,4.6,4.9,28.8,32,14.8,15.5,29.5,11],
		[27.5,29.8,25.5,27.6,29.3,24.2,12.4,25.8,35.1,24.3,18.2,32.9,28.9,30.8,31.5,33.2,31.4,23.2,29.8,6.8,27.7,25.1,29.9,29.1,26.9,30.8,32.6,26,34.6,28.2,31.3,9.7,28.4,32.3,0,10.2,9.5,27.1,26.6,29.3,30,26,25.1,19.1,25.9,28.5,32.6,17.3,8.2,24.3,18.5,11.7,31.7],
		[21.6,23.9,19.5,21.6,23.3,18.8,6.3,20.3,36.7,18.8,14.6,27.3,22.9,25.3,26,28.6,25.8,17.8,24.3,4.4,21.9,19.6,24.5,23.1,21.5,25.3,27,20.6,29.3,24.6,25.8,3,23,26.8,10.2,0,4.2,23.5,21.2,25.7,24.5,20,19.1,13.2,20,23.1,27.2,13.7,11,18.9,13,11.3,28],
		[20.8,23.1,18.7,20.9,22.6,17.8,5.3,19.3,36.7,17.8,12.3,26.4,22.2,24.5,25,27.3,24.9,16.8,23.3,4.4,21.2,18.6,23.5,22.4,20.5,24.4,26.2,19.6,28.4,22.4,24.9,2.8,22,25.9,9.7,4.2,0,21.2,20.2,23.5,23.5,19.3,18.4,12.2,19.2,22.1,26.2,11.5,8.5,17.9,12.1,8.8,25.8],
		[4.4,6.7,10.7,5.6,4.3,12.2,20,9.1,21.4,10.1,21.6,10.6,6.3,7.3,18.6,9.6,11.5,11.3,10,22.7,6.7,12.5,15.8,5.9,8.3,12.9,14.3,13.7,11,4.7,14.2,21.3,13.5,15.5,24.9,22.7,20.9,0,7.5,5.8,10.9,10,7.5,20.3,6.2,15.7,13.3,15.3,21.9,10.2,14.1,16.1,8.1],
		[3.4,5.4,6.7,4.2,5.2,7.3,15.1,2.5,21.9,5.2,20.5,8.2,4.5,6.8,12.4,8.8,7.8,6.3,4.5,19.6,2.4,6.4,9.7,5.5,1.8,7.2,9.9,7.6,11,8.2,10.7,17.5,7.3,11.1,24.6,19.4,19.2,7.5,0,10.3,4.7,6.7,3.5,15.4,3.8,9.5,9.8,18.8,25.3,5.4,9.4,19.5,8.3],
		[8.6,9.3,15.9,9.7,7.2,16.7,25.2,12.9,19.4,15.2,26.3,8.7,8.7,5.4,17,7.6,9.6,16.5,8.2,27.4,9.9,16.6,14.2,10.3,12.4,11,12.4,16.4,9,4.9,12.2,26,13.8,13.6,30.5,27.4,25.6,7.5,11.6,0,11.6,15.2,11.9,25.5,10.7,14,11.4,20.1,26.6,15.4,19.3,20.8,6.1],
		[6.1,6.5,8.9,7.1,7.3,7.5,17.3,4.6,21.9,7.3,22.6,8.2,5.5,7.2,11.4,8.8,7.8,8.5,4.5,21.8,3.9,7.3,8.6,8.3,5,7.2,9.3,7.1,11,10.7,10.1,19.6,6.3,10.1,26.7,21.6,21.4,10,3.8,12.6,0,9.1,5.8,17.6,6.3,8.5,9.9,21.2,27.8,7.5,11.5,22,8.4],
		[6.4,8.7,5.5,6.5,8.2,8.6,15.6,5.5,26.7,5.5,20.9,13,7.8,10.1,15.8,13.6,12.6,7.7,9.3,20.1,6.8,8.9,14.2,7.9,6.5,12,14.7,10.1,15.8,11.2,15.5,17.9,12.1,15.9,25,19.9,19.7,9.5,6.1,13.2,9.5,0,4,15.9,4.8,12.9,14.7,18.5,25.1,5.1,9.7,19.3,13.1],
		[4,6.4,5,4.1,5.8,6.6,14.4,2.6,24.1,4.4,19.8,10.4,5.5,7.8,13.7,11,10,5.6,6.7,18.9,4.5,6.8,11.9,5.6,3.9,9.4,12.1,8.1,13.2,8.8,12.9,16.8,9.5,13.3,23.9,18.7,18.5,7.5,3.6,10.9,6.9,4.3,0,14.7,2.4,10.8,12.1,16.4,23,4.6,8.5,17.2,10.5],
		[19.2,21.5,17.1,19.3,21,18.5,13,18,39.3,16.5,11.6,25,20.6,22.9,25.6,26.3,23.5,17.5,22,18.6,19.6,18.6,24,20.8,19.2,22.9,24.7,19.7,26.9,24,25.4,17.2,21.7,25.5,23,18.6,16.8,22.4,18.9,26.1,22.2,17.7,16.8,0,17.6,22.7,25.3,17.4,21.2,16.6,11.3,15.8,25.9],
		[2.2,4.7,6.2,2.2,4.2,7.7,15.5,3.5,24.3,5.5,20.9,10.7,4.4,6.7,14.6,11.3,10.3,6.7,7,20,4.1,7.5,12.2,3.3,4.1,9.7,12.4,8.6,13.5,7.1,13.2,17.9,9.8,13.6,25,19.8,19.6,6.4,3.8,9.2,7.2,5.5,2.2,15.8,0,11.7,12.4,16.7,23.3,5.7,9.6,17.5,10.2],
		[11.5,11.9,14.2,12.5,12.7,7.1,19.1,10,18.2,12.2,24.5,6.3,10.9,11,3.6,8.3,6.4,8.1,8.8,23.6,9.3,7.9,2,13.7,10.4,6,5.9,6.6,6.6,13.9,2.8,21.4,4.3,4.9,28.6,23.4,23.2,15.4,9.2,15,9.5,14.5,11.2,19.4,11.7,0,4.1,26.6,29.8,12.4,13.4,27.4,11.1],
		[11.6,11.1,16,12.8,10.5,10,21.7,11.7,16.2,14.4,27.1,2.7,10.5,7.7,6,4.7,4.5,11,8.2,26.2,11,10.8,3.3,13.8,12.1,5.9,2.8,9.8,4.1,10.7,1.3,24.1,7,4.9,31.2,26,25.8,13.3,10.8,11.4,10.3,16.2,12.9,22,13.4,5.1,0,25.9,32.4,14.6,16,26.6,7.7],
		[17.1,19.7,20.8,17.2,18.1,22.3,12.1,19.1,31.5,20.1,12.6,22.9,19.3,19.5,29.4,21.9,23.8,21.3,22.3,13.2,19.7,22.5,27.9,18.3,20.1,25.1,26.6,23.7,23.3,16.9,26.4,11.9,25.8,27.8,16.4,13.3,11.5,15.8,19.8,18.1,23.2,20.1,17.5,13.8,17.3,26.5,25.6,0,12.5,20.3,19,7,20.4],
		[23.6,26.1,24.8,23.6,24.6,23.9,11,25.4,37.1,23.9,16.1,29.3,25.8,26,31.1,28.3,30.2,22.9,28.7,10.1,26.2,24.7,29.6,24.7,26.5,30.5,32.3,25.7,29.7,23.4,31,8.9,28.1,32,8,10.3,8.3,22.3,26.2,24.5,29.6,25.4,24,17.3,23.7,28.2,32,12.5,0,24,18.2,6.8,26.8],
		[6.6,8.9,3,6.7,8.4,8.3,12.8,4.3,25.7,1.2,18.2,12,8,10.3,15,12.7,11.6,7.3,8.3,17.3,6.3,8,13.4,8.2,5.5,11.1,13.8,9.1,14.8,11.4,14.6,15.2,11.1,14.9,22.3,17.1,16.9,9.7,5.2,13.5,8.6,5.6,4.2,13.1,5,12.1,13.7,18.7,23.6,0,6.5,19.5,12.2],
		[11.8,14.1,9.8,11.9,13.6,8.6,7.9,9.8,30.5,8.3,14,16.9,13.2,15.5,15.9,18.1,15.4,7.7,13.8,12.4,11.8,9.5,14.3,13.4,11,14.8,16.6,10.4,18.9,16.6,15.7,10.3,12.9,16.7,17.4,12.2,12,15,10.7,18.7,14,10.5,9.4,9.2,10.2,12.9,17,19.4,18.7,8.4,0,17.8,17.6],
		[17.3,19.9,20.9,17.4,18.3,22.4,10.2,19.3,30.3,20.3,10.8,23,19.5,19.7,29.6,22.1,24,21.5,22.5,11.4,19.9,22.7,28,18.4,20.3,25.3,26.7,23.9,23.4,17.1,26.6,10,25.9,28,13.3,11.4,9.6,16,20,18.2,23.3,20.2,17.7,12,17.4,26.7,25.8,6.4,8.8,20.5,17.2,0,20.5],
		[7.9,7.4,14.3,9,6.7,13.1,23,10.4,16.2,13.1,27.1,5.1,6.8,3.6,13.3,4,6,14.3,4.6,27.6,8,13,10.6,10.1,10.7,7.4,8.8,12.8,5.9,5.7,8.7,25.4,10.2,10,31.3,27.3,26.4,8.3,9.5,5.9,8,13.6,10.5,23.3,10.1,10.4,7.8,20.8,27.4,13.3,17.3,21.6,0]
];

// Okul türü seçildiğinde
document.getElementById('okulTuru').addEventListener('change', function() {
    const okulTuru = this.value;
    const okul1Select = document.getElementById('okul1');
    const okul2Select = document.getElementById('okul2');
    const hesaplaBtn = document.getElementById('calculate');
    const resultDiv = document.getElementById('result');

    // Select'leri temizle
    okul1Select.innerHTML = '<option value="">Seçiniz</option>';
    okul2Select.innerHTML = '<option value="">Seçiniz</option>';

    // Okul listesini seç
    const okulListesi = okulTuru === 'lise' ? liseListesi : ortaokulListesi;

    // Select'leri doldur
    okulListesi.forEach((okul, index) => {
        okul1Select.add(new Option(okul, index));
        okul2Select.add(new Option(okul, index));
    });

    // Element durumlarını güncelle
    okul1Select.disabled = !okulTuru;
    okul2Select.disabled = !okulTuru;
    hesaplaBtn.disabled = !okulTuru;

    // Sonuç alanını güncelle
    resultDiv.innerHTML = okulTuru ?
        '<p>Lütfen iki okul seçiniz ve hesapla butonuna basınız.</p>' :
        '<p>Lütfen önce okul türünü seçiniz.</p>';
});

// Mesafe hesapla fonksiyonu
function calculateDistance() {
    const okulTuru = document.getElementById('okulTuru').value;
    const okul1Index = parseInt(document.getElementById('okul1').value);
    const okul2Index = parseInt(document.getElementById('okul2').value);
    const resultDiv = document.getElementById('result');

    // Hata kontrolleri
    if (!okulTuru) {
        resultDiv.innerHTML = '<p style="color: red;">Lütfen önce okul türünü seçiniz.</p>';
        return;
    }

    if (isNaN(okul1Index) || isNaN(okul2Index)) {
        resultDiv.innerHTML = '<p style="color: red;">Lütfen her iki okulu da seçiniz.</p>';
        return;
    }

    // Doğru matris ve listeyi seç
    const distanceMatrix = okulTuru === 'lise' ? distanceMatrix_Lise : distanceMatrix_Ortaokul;
    const okulListesi = okulTuru === 'lise' ? liseListesi : ortaokulListesi;

    // Aynı okul kontrolü
    if (okul1Index === okul2Index) {
        resultDiv.innerHTML = `<p>Aynı okulu seçtiniz (${okulListesi[okul1Index]}). Mesafe: 0 km</p>`;
        return;
    }

    // Mesafe hesapla
    const distance = distanceMatrix[okul1Index][okul2Index];
    const okul1Name = okulListesi[okul1Index];
    const okul2Name = okulListesi[okul2Index];

    // En yakın 5 okulu bul
    const nearestSchools = findNearestSchools(okul1Index, distanceMatrix, okulListesi);

    // Sonuç HTML'i oluştur
    let html = `
        <p><strong>${okul1Name}</strong> ile <strong>${okul2Name}</strong> arası mesafe: <strong>${distance} km</strong></p>
        <div class="nearest-schools-container">
            <h3>${okul1Name} Okuluna En Yakın 5 Okul:</h3>
            <table class="nearest-schools-table">
                <thead>
                    <tr>
                        <th>Sıra</th>
                        <th>Okul Adı</th>
                        <th>Mesafe (km)</th>
                    </tr>
                </thead>
                <tbody>`;

    nearestSchools.forEach((school, index) => {
        html += `
            <tr>
                <td>${index + 1}</td>
                <td>${school.name}</td>
                <td>${school.distance.toFixed(1)}</td>
            </tr>`;
    });

    html += `</tbody></table></div>`;
    resultDiv.innerHTML = html;
}

// En yakın okulları bulan fonksiyon
function findNearestSchools(selectedSchoolIndex, distanceMatrix, okulListesi) {
    const distances = distanceMatrix[selectedSchoolIndex];

    // Okulları mesafeleriyle eşleştir
    const schoolsWithDistances = distances.map((distance, index) => ({
        index,
        name: okulListesi[index],
        distance
    }));

    // Geçerli okulları filtrele (kendisi ve geçersiz mesafeler hariç)
    const filteredSchools = schoolsWithDistances.filter(school =>
        school.distance > 0 && !isNaN(school.distance)
    );

    // Mesafeye göre sırala
    const sortedSchools = filteredSchools.sort((a, b) => a.distance - b.distance);

    // İlk 5 okulu döndür
    return sortedSchools.slice(0, 5);
}

// Sayfa yüklendiğinde
document.addEventListener('DOMContentLoaded', function() {
    document.getElementById('calculate').addEventListener('click', calculateDistance);
});